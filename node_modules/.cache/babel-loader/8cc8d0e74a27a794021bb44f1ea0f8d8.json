{"ast":null,"code":"import _slicedToArray from\"/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import axios from\"axios\";import{Post_url}from\"../../../constants/urls\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ViewPost(){var navigate=useNavigate();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),infoPost=_useState2[0],setInfoPost=_useState2[1];var getPosts=function getPosts(){axios.get(Post_url,{headers:{Authorization:localStorage.getItem('tokenEddit')}}).then(function(res){setInfoPost(res.data);}).catch(function(err){console.log(err.response);});};useEffect(function(){getPosts();},[getPosts()]);var idComments=function idComments(id){localStorage.setItem('idComments',id);navigate('/comments-post');};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{children:infoPost&&infoPost.length>0?infoPost.map(function(posts){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:posts.username}),/*#__PURE__*/_jsx(\"p\",{children:posts.title}),/*#__PURE__*/_jsx(\"p\",{children:posts.createdAt})]}),/*#__PURE__*/_jsx(\"div\",{children:posts.body}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:posts.voteSum}),/*#__PURE__*/_jsxs(\"p\",{onClick:function onClick(){return idComments(posts.id);},children:[\" Ver todos os \",posts.commentCount,\" coment\\xE1rios\"]})]})]},posts.id);}):/*#__PURE__*/_jsx(\"p\",{children:\"Aguarde o carregamento dos posts...\"})})});}","map":{"version":3,"sources":["/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/pages/post/viewPosts/viewPost.js"],"names":["React","useEffect","useState","useNavigate","axios","Post_url","ViewPost","navigate","infoPost","setInfoPost","getPosts","get","headers","Authorization","localStorage","getItem","then","res","data","catch","err","console","log","response","idComments","id","setItem","length","map","posts","username","title","createdAt","body","voteSum","commentCount"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,yBAAzB,C,wFAEA,cAAe,SAASC,CAAAA,QAAT,EAAmB,CAChC,GAAMC,CAAAA,QAAQ,CAAGJ,WAAW,EAA5B,CACA,cAAiCD,QAAQ,CAAC,EAAD,CAAzC,wCAAQM,QAAR,eAAkBC,WAAlB,eAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrBN,KAAK,CAACO,GAAN,CAAUN,QAAV,CAAoB,CAClBO,OAAO,CAAE,CACPC,aAAa,CAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CADR,CADS,CAApB,EAKCC,IALD,CAKM,SAACC,GAAD,CAAS,CACbR,WAAW,CAACQ,GAAG,CAACC,IAAL,CAAX,CACD,CAPD,EAQCC,KARD,CAQO,SAACC,GAAD,CAAS,CACdC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,QAAhB,EACD,CAVD,EAWD,CAZD,CAcAtB,SAAS,CAAC,UAAM,CACdS,QAAQ,GACT,CAFQ,CAEN,CAACA,QAAQ,EAAT,CAFM,CAAT,CAIA,GAAMc,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,EAAD,CAAQ,CACzBX,YAAY,CAACY,OAAb,CAAqB,YAArB,CAAmCD,EAAnC,EACAlB,QAAQ,CAAC,gBAAD,CAAR,CACD,CAHD,CAKA,mBACE,kCACE,qBACGC,QAAQ,EAAIA,QAAQ,CAACmB,MAAT,CAAkB,CAA9B,CAAkCnB,QAAQ,CAACoB,GAAT,CAAa,SAACC,KAAD,CAAW,CACzD,mBAAO,oCACL,oCACG,mBAAIA,KAAK,CAACC,QAAV,EADH,cAEG,mBAAID,KAAK,CAACE,KAAV,EAFH,cAGG,mBAAIF,KAAK,CAACG,SAAV,EAHH,GADK,cAML,qBACGH,KAAK,CAACI,IADT,EANK,cASL,oCACE,mBAAIJ,KAAK,CAACK,OAAV,EADF,cAEE,WAAG,OAAO,CAAE,yBAAMV,CAAAA,UAAU,CAACK,KAAK,CAACJ,EAAP,CAAhB,EAAZ,4BAAuDI,KAAK,CAACM,YAA7D,qBAFF,GATK,GAAUN,KAAK,CAACJ,EAAhB,CAAP,CAcD,CAfkC,CAAlC,cAeK,0DAhBR,EADF,EADF,CAuBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Post_url } from \"../../../constants/urls\";\n\nexport default function ViewPost(){\n  const navigate = useNavigate();\n  const [ infoPost, setInfoPost] = useState([])\n\n  const getPosts = () => {\n    axios.get(Post_url, {\n      headers: {\n        Authorization: localStorage.getItem('tokenEddit')\n      }\n\t\t})\n    .then((res) => {\n      setInfoPost(res.data);\n    })\n    .catch((err) => {\n      console.log(err.response);\n    })\n  }\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts()])\n\n  const idComments = (id) => {\n    localStorage.setItem('idComments', id)\n    navigate('/comments-post') \n  }\n\n  return (\n    <div>\n      <div>\n        {infoPost && infoPost.length > 0 ? infoPost.map((posts) => {\n          return <div key={posts.id}>\n            <div>\n               <p>{posts.username}</p>\n               <p>{posts.title}</p>\n               <p>{posts.createdAt}</p>\n            </div>\n            <div>\n              {posts.body}\n            </div>\n            <div>\n              <p>{posts.voteSum}</p>\n              <p onClick={() => idComments(posts.id)}> Ver todos os {posts.commentCount} coment√°rios</p>\n            </div>\n            </div>\n        }) :  <p>Aguarde o carregamento dos posts...</p>}\n      </div>\n\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}