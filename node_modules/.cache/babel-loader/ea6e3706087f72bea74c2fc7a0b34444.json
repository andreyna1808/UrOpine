{"ast":null,"code":"var _jsxFileName = \"/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/assents/formRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Register_url } from \"../constants/urls\";\nimport { Buttons, Container, Form, Input } from \"../components/styledFormsLoginRegister\";\nimport { toast } from \"react-toastify\";\nimport { logDOM } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormRegister() {\n  _s();\n\n  const navigate = useNavigate();\n  const [form, onChange] = useForm({\n    username: '',\n    email: '',\n    password: ''\n  });\n\n  const registerAccount = e => {\n    e.preventDefault();\n    axios.post(Register_url, form).then(res => {\n      console.log('FUnsionou');\n      toast.success('Cadastro realizado com sucesso! Bom proveito');\n      navigate('/');\n    }).catch(err => {\n      toast.error('Sentimos muito, mas não foi possível realizar seu cadastro');\n    });\n  };\n\n  const keyPressEnter = e => {\n    if (e.key === 'Enter' && form.name !== '' && form.email !== '' && form.username !== '') {\n      registerAccount();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: registerAccount,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onKeyPress: keyPressEnter,\n        required: true,\n        name: \"username\",\n        type: 'text',\n        value: form.username,\n        onChange: onChange,\n        placeholder: \"Crie seu nome de usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onKeyPress: keyPressEnter,\n        required: true,\n        name: \"email\",\n        type: 'email',\n        value: form.email,\n        onChange: onChange,\n        placeholder: \"Digite seu melhor email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onKeyPress: keyPressEnter,\n        required: true,\n        name: \"password\",\n        minLength: '8',\n        maxLength: '30',\n        type: 'password',\n        value: form.password,\n        onChange: onChange,\n        placeholder: \"Crie sua senha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      type: \"submit\",\n      onKeyPress: keyPressEnter,\n      children: \"Fazer cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormRegister, \"dcypOE+919hcMmq+UDSE3J7M4f4=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = FormRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRegister\");","map":{"version":3,"sources":["/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/assents/formRegister.js"],"names":["React","useEffect","useForm","axios","useNavigate","Register_url","Buttons","Container","Form","Input","toast","logDOM","FormRegister","navigate","form","onChange","username","email","password","registerAccount","e","preventDefault","post","then","res","console","log","success","catch","err","error","keyPressEnter","key","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"\nimport { Register_url } from \"../constants/urls\";\nimport { Buttons, Container, Form, Input } from \"../components/styledFormsLoginRegister\";\nimport { toast } from \"react-toastify\";\nimport { logDOM } from \"@testing-library/react\";\n\nexport default function FormRegister() {\n  const navigate = useNavigate();\n\n  const [ form, onChange ] = useForm({username: '', email:'', password: ''})\n \n  const registerAccount = (e) => {    \n    e.preventDefault()\n    \n    axios.post(Register_url, form)\n    .then((res) => {\n      console.log('FUnsionou');\n      toast.success('Cadastro realizado com sucesso! Bom proveito')\n      navigate('/')\n    })\n    .catch((err) => {\n      toast.error('Sentimos muito, mas não foi possível realizar seu cadastro')\n    })\n  }\n  const keyPressEnter = (e) => {\n    if(e.key === 'Enter' && form.name !== '' && form.email !== '' && form.username !== ''){\n      registerAccount()\n    }\n  }\n\n  return (\n    <Container>\n      <Form onSubmit={registerAccount}>\n        <Input onKeyPress={keyPressEnter} required name=\"username\" type={'text'} value={form.username} onChange={onChange} placeholder=\"Crie seu nome de usuário\"></Input>\n        <Input onKeyPress={keyPressEnter} required name=\"email\" type={'email'} value={form.email} onChange={onChange} placeholder=\"Digite seu melhor email\"></Input>\n        <Input onKeyPress={keyPressEnter} required name=\"password\" minLength={'8'} maxLength={'30'} type={'password'} value={form.password} onChange={onChange} placeholder=\"Crie sua senha\"></Input>\n      </Form>\n      <Buttons type='submit' onKeyPress={keyPressEnter} >Fazer cadastro</Buttons>\n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}