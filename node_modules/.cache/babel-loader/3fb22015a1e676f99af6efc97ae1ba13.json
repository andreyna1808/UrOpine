{"ast":null,"code":"import _slicedToArray from\"/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import axios from\"axios\";import{Post_url}from\"../../../constants/urls\";import useForm from\"../../../hooks/useForm\";import{ButtonsPost,Container,Form,Input,InputBody}from\"../styledPost\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function CreatePost(){var _useForm=useForm({title:'',body:''}),_useForm2=_slicedToArray(_useForm,3),form=_useForm2[0],onChange=_useForm2[1],clear=_useForm2[2];var submit=function submit(e){e.preventDefault();};var postPosts=function postPosts(){axios.post(Post_url,form,{headers:{Authorization:localStorage.getItem('tokenEddit')}}).then(function(res){alert('Conteúdo publicado com sucesso!');clear();}).catch(function(err){alert('Sentimos muito, mas não foi possível criar essa publicação');});};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Criar Post\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submit,children:[/*#__PURE__*/_jsx(Input,{required:true,name:\"title\",type:'text',value:form.title,onChange:onChange,placeholder:\"T\\xEDtulo\"}),/*#__PURE__*/_jsx(InputBody,{required:true,name:\"body\",type:'text',value:form.body,onChange:onChange,placeholder:\"Conte\\xFAdo\"}),/*#__PURE__*/_jsx(ButtonsPost,{type:\"submit\",onClick:postPosts,children:\" Enviar Post\"})]})]});}","map":{"version":3,"sources":["/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/pages/post/createPost/createPost.js"],"names":["React","axios","Post_url","useForm","ButtonsPost","Container","Form","Input","InputBody","CreatePost","title","body","form","onChange","clear","submit","e","preventDefault","postPosts","post","headers","Authorization","localStorage","getItem","then","res","alert","catch","err"],"mappings":"gJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,OAASC,WAAT,CAAsBC,SAAtB,CAAiCC,IAAjC,CAAuCC,KAAvC,CAA8CC,SAA9C,KAA+D,eAA/D,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,EAAqB,CAClC,aAAkCN,OAAO,CAAC,CAACO,KAAK,CAAE,EAAR,CAAYC,IAAI,CAAC,EAAjB,CAAD,CAAzC,sCAAQC,IAAR,cAAcC,QAAd,cAAwBC,KAAxB,cAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,CAAD,CAAO,CACpBA,CAAC,CAACC,cAAF,GACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtBjB,KAAK,CAACkB,IAAN,CAAWjB,QAAX,CAAqBU,IAArB,CAA2B,CACzBQ,OAAO,CAAE,CACPC,aAAa,CAAEC,YAAY,CAACC,OAAb,CAAqB,YAArB,CADR,CADgB,CAA3B,EAKCC,IALD,CAKM,SAACC,GAAD,CAAS,CACbC,KAAK,CAAC,iCAAD,CAAL,CACAZ,KAAK,GACN,CARD,EASCa,KATD,CASO,SAACC,GAAD,CAAS,CACdF,KAAK,CAAC,4DAAD,CAAL,CACD,CAXD,EAYD,CAbD,CAeA,mBACE,MAAC,SAAD,yBACE,kCADF,cAEE,MAAC,IAAD,EAAM,QAAQ,CAAEX,MAAhB,wBACE,KAAC,KAAD,EAAO,QAAQ,KAAf,CAAgB,IAAI,CAAC,OAArB,CAA6B,IAAI,CAAE,MAAnC,CAA2C,KAAK,CAAEH,IAAI,CAACF,KAAvD,CAA8D,QAAQ,CAAEG,QAAxE,CAAkF,WAAW,CAAC,WAA9F,EADF,cAEE,KAAC,SAAD,EAAW,QAAQ,KAAnB,CAAoB,IAAI,CAAC,MAAzB,CAAgC,IAAI,CAAE,MAAtC,CAA8C,KAAK,CAAED,IAAI,CAACD,IAA1D,CAAgE,QAAQ,CAAEE,QAA1E,CAAoF,WAAW,CAAC,aAAhG,EAFF,cAGE,KAAC,WAAD,EAAa,IAAI,CAAC,QAAlB,CAA2B,OAAO,CAAEK,SAApC,0BAHF,GAFF,GADF,CAUD","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Post_url } from \"../../../constants/urls\";\nimport useForm from \"../../../hooks/useForm\";\nimport { ButtonsPost, Container, Form, Input, InputBody } from \"../styledPost\";\n\nexport default function CreatePost(){\n  const [ form, onChange, clear ] = useForm({title: '', body:''})\n\n  const submit = (e) => {\n    e.preventDefault()\n  }\n\n  const postPosts = () => {\n    axios.post(Post_url, form, {\n      headers: {\n        Authorization: localStorage.getItem('tokenEddit')\n      }\n\t\t})\n    .then((res) => {\n      alert('Conteúdo publicado com sucesso!')\n      clear();\n    })\n    .catch((err) => {\n      alert('Sentimos muito, mas não foi possível criar essa publicação')\n    })\n  }\n\n  return (\n    <Container>\n      <h1>Criar Post</h1>\n      <Form onSubmit={submit}>\n        <Input required name=\"title\" type={'text'} value={form.title} onChange={onChange} placeholder=\"Título\"></Input>\n        <InputBody required name=\"body\" type={'text'} value={form.body} onChange={onChange} placeholder=\"Conteúdo\"></InputBody>\n        <ButtonsPost type=\"submit\" onClick={postPosts}> Enviar Post</ButtonsPost>\n      </Form>    \n    </Container>\n  );\n}"]},"metadata":{},"sourceType":"module"}