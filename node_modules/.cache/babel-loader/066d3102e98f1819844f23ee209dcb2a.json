{"ast":null,"code":"var _jsxFileName = \"/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/pages/comments/createComments/createComments.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport useForm from \"../../../hooks/useForm\";\nimport { Auth, Post_url } from \"../../../constants/urls\";\nimport { toast } from \"react-toastify\";\nimport { ButtonsPost, Form, Input } from \"../../post/styledPost\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateComments() {\n  _s();\n\n  const [form, onChange, clear] = useForm({\n    body: ''\n  });\n  let idComments = localStorage.getItem('idComments');\n\n  const commentsCreate = e => {\n    e.preventDefault();\n    axios.post(`${Post_url}/${idComments}/comments`, form, {\n      headers: {\n        Authorization: localStorage.getItem('tokenEddit')\n      }\n    }).then(res => {\n      toast.success('Comentário enviado com sucesso!');\n      clear();\n    }).catch(err => {\n      toast.err('Sentimos muito, mas não foi possível enviar esse comentário!');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: commentsCreate,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        required: true,\n        name: \"body\",\n        type: 'text',\n        value: form.body,\n        onChange: onChange,\n        placeholder: \"Envie seu coment\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonsPost, {\n        type: \"submit\",\n        onClick: commentsCreate,\n        children: \"Enviar coment\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateComments, \"jAajgqUYAWOI/wW4ESwfEGZ03d0=\", false, function () {\n  return [useForm];\n});\n\n_c = CreateComments;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateComments\");","map":{"version":3,"sources":["/home/andreyna/moreira-Andreyna-Carvalho/modulo3/lab-eddit/src/pages/comments/createComments/createComments.js"],"names":["React","axios","useForm","Auth","Post_url","toast","ButtonsPost","Form","Input","CreateComments","form","onChange","clear","body","idComments","localStorage","getItem","commentsCreate","e","preventDefault","post","headers","Authorization","then","res","success","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,yBAA/B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,WAAT,EAAsBC,IAAtB,EAA4BC,KAA5B,QAAyC,uBAAzC;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,IAA2BV,OAAO,CAAC;AAACW,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAxC;AAEA,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAjB;;AAEA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEAlB,IAAAA,KAAK,CAACmB,IAAN,CAAY,GAAEhB,QAAS,IAAGU,UAAW,WAArC,EAAiDJ,IAAjD,EAAuD;AACrDW,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEP,YAAY,CAACC,OAAb,CAAqB,YAArB;AADR;AAD4C,KAAvD,EAKCO,IALD,CAKOC,GAAD,IAAS;AACbnB,MAAAA,KAAK,CAACoB,OAAN,CAAc,iCAAd;AACAb,MAAAA,KAAK;AACN,KARD,EASCc,KATD,CASQC,GAAD,IAAS;AACdtB,MAAAA,KAAK,CAACsB,GAAN,CAAU,8DAAV;AACD,KAXD;AAYD,GAfD;;AAiBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEV,cAAhB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,IAAI,EAAC,MAArB;AAA4B,QAAA,IAAI,EAAE,MAAlC;AAA0C,QAAA,KAAK,EAAEP,IAAI,CAACG,IAAtD;AAA4D,QAAA,QAAQ,EAAEF,QAAtE;AAAgF,QAAA,WAAW,EAAC;AAA5F;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAEM,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA9BuBR,c;UACWP,O;;;KADXO,c","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport useForm from \"../../../hooks/useForm\";\nimport { Auth, Post_url } from \"../../../constants/urls\";\nimport { toast } from \"react-toastify\";\nimport { ButtonsPost, Form, Input } from \"../../post/styledPost\";\n\nexport default function CreateComments() {\n  const [form, onChange, clear ] = useForm({body:''})\n\n  let idComments = localStorage.getItem('idComments')\n\n  const commentsCreate = (e) => { \n    e.preventDefault()\n   \n    axios.post(`${Post_url}/${idComments}/comments`, form, {\n      headers: {\n        Authorization: localStorage.getItem('tokenEddit')\n      }\n    })\n    .then((res) => {\n      toast.success('Comentário enviado com sucesso!');\n      clear();\n    })\n    .catch((err) => {\n      toast.err('Sentimos muito, mas não foi possível enviar esse comentário!')\n    })\n  }\n\n  return (\n    <div>\n      <Form onSubmit={commentsCreate}>\n        <Input required name=\"body\" type={'text'} value={form.body} onChange={onChange} placeholder=\"Envie seu comentário\"></Input>\n        <ButtonsPost type=\"submit\" onClick={commentsCreate}>Enviar comentário</ButtonsPost>\n      </Form>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}